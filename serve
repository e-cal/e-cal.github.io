#!/usr/bin/env python

from livereload import Server, shell
import os
import subprocess

def build_markdown(filepaths: list[str]):
    """Runs the `./build` command on the given markdown file."""
    for fp in filepaths:
        print(f"Building {fp}...")
        try:
            # Extract the filename from filepath:
            filename = os.path.basename(fp)
            command = f"./build {filename}"
            print(f"Running: {command}")
            # Use shell=True in subprocess.run if your command has shell-specific features (e.g., wildcards, pipes).  Otherwise shell=False and provide args as a list.
            result = subprocess.run(command, shell=True, capture_output=True, text=True)
            print(result.stdout)
            # result = shell(command, shell=True)()
            if result.returncode != 0:
                print(f"Error running build script for {filename}: {result.stderr}")

        except Exception as e:
            print(f"Error building markdown: {e}")

server = Server()
# Set up a custom watch for markdown files with the build command
server.watch('**/*.md', build_markdown)
# Watch other files for simple reloads
server.watch('**/*.html')
server.watch('**/styles/*.css')
# Serve your project
server.serve(root='.', port=8000)
